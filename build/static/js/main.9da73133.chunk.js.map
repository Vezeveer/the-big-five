{"version":3,"sources":["imgs/leopard-1.jpg","imgs/lion-1.jpg","imgs/elephant-1.jpg","imgs/buffalo-1.jpg","imgs/rhino-1.jpg","imgs/logo_transparent_sm2.png","components/slide1.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","BigFiveAnim","react_default","a","createElement","className","style","mainContainer","logoContainer","logoStyle","src","logo","alt","mainSlideContainer","slideContainer","renderprops","from","opacity","marginTop","to","config","delay","duration","props","slides","leopard","lion","elephant","buffalo","rhino","height","width","zIndex","padding","margin","App","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9da73133.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leopard-1.ec869f48.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lion-1.5af7066d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elephant-1.a7f744cf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/buffalo-1.7c66a66b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rhino-1.7ea886ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo_transparent_sm2.15f6f2c8.png\";","import React from 'react';\r\nimport { Spring } from 'react-spring/renderprops';\r\nimport leopard from '../imgs/leopard-1.jpg';\r\nimport lion from '../imgs/lion-1.jpg';\r\nimport elephant from '../imgs/elephant-1.jpg';\r\nimport buffalo from '../imgs/buffalo-1.jpg';\r\nimport rhino from '../imgs/rhino-1.jpg';\r\nimport logo from '../imgs/logo_transparent_sm2.png';\r\n\r\nexport default function BigFiveAnim() {\r\n  return (\r\n    <div className=\"mainContainer\" style={mainContainer} >\r\n      <div style={logoContainer} className=\"position-absolute d-flex justify-content-center align-items-center \">\r\n        <img className=\"logo-style position-absolute\" style={logoStyle} src={logo} alt=\"logo image\" />\r\n      </div>\r\n      <div style={mainSlideContainer} className=\"mainSliderContainer row\">\r\n        <div style={slideContainer} className=\"col\">\r\n          <Spring\r\n            from={{ opacity: 0, marginTop: 100 }}\r\n            to={{ opacity: 1, marginTop: 0 }}\r\n            config={{ delay: 0, duration: 2000 }}\r\n          >\r\n            {props => (\r\n              <div className=\"imageSlidesOuter leopard\" style={props}>\r\n                <img className=\"imageSlides\" style={slides} src={leopard} alt=\"leopard img\" />\r\n              </div>\r\n            )}\r\n          </Spring>\r\n        </div>\r\n        <div style={slideContainer} className=\"col d-flex align-items-center\">\r\n          <Spring\r\n            from={{ opacity: 0, marginTop: -100 }}\r\n            to={{ opacity: 1, marginTop: 0 }}\r\n            config={{ delay: 250, duration: 2000 }}\r\n          >\r\n            {props => (\r\n              <div className=\"imageSlidesOuter lion\" style={props}>\r\n                <img className=\"imageSlides\" style={slides} src={lion} alt=\"lion img\" />\r\n              </div>\r\n            )}\r\n          </Spring>\r\n        </div>\r\n        <div style={slideContainer} className=\"col d-flex align-items-end\">\r\n          <Spring\r\n            from={{ opacity: 0 }}\r\n            to={{ opacity: 1 }}\r\n            config={{ delay: 900, duration: 1000 }}\r\n          >\r\n            {props => (\r\n              <div className=\"imageSlidesOuter elephant\" style={props}>\r\n                <img className=\"imageSlides\" style={slides} src={elephant} alt=\"elephant img\" />\r\n              </div>\r\n            )}\r\n          </Spring>\r\n        </div>\r\n        <div style={slideContainer} className=\"col d-flex align-items-center\">\r\n          <Spring\r\n            from={{ opacity: 0, marginTop: 100 }}\r\n            to={{ opacity: 1, marginTop: 0 }}\r\n            config={{ delay: 850, duration: 2000 }}\r\n          >\r\n            {props => (\r\n              <div className=\"imageSlidesOuter buffalo\" style={props}>\r\n                <img className=\"imageSlides\" style={slides} src={buffalo} alt=\"buffalo img\" />\r\n              </div>\r\n            )}\r\n          </Spring>\r\n        </div>\r\n        <div style={slideContainer} className=\"col\">\r\n          <Spring\r\n            from={{ opacity: 0, marginTop: -100 }}\r\n            to={{ opacity: 1, marginTop: 0 }}\r\n            config={{ delay: 700, duration: 2000 }}\r\n          >\r\n            {props => (\r\n              <div className=\"imageSlidesOuter rhino\" style={props}>\r\n                <img className=\"imageSlides\" style={slides} src={rhino} alt=\"rhino img\" />\r\n              </div>\r\n            )}\r\n          </Spring>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nconst logoContainer = {\r\n  height: \"100vh\",\r\n  width: \"100vw\"\r\n}\r\nconst logoStyle = {\r\n  width: \"300px\",\r\n  zIndex: 3\r\n}\r\n\r\nconst slides = {\r\n  width: \"100%\"\r\n}\r\n\r\nconst slideContainer = {\r\n  padding: 0\r\n}\r\n\r\nconst mainSlideContainer = {\r\n  width: \"100vw\",\r\n  height: \"100vh\",\r\n  padding: 0,\r\n  margin: 0\r\n\r\n}\r\n\r\nconst mainContainer = {\r\n  width: \"100vw\",\r\n  height: \"100vh\"\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport BigFiveAnim from './components/slide1';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <BigFiveAnim />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}